#!/bin/bash
################################table creation ##############################
url=$1
meta_data=""
pk_meta=""
read -r -p "Enter name of Table : " tb_name
if [[ $(check_name $tb_name) = 'true' ]]; then
  read -r -p "Enter number of columns :" num_col
   
  if [[ ! $(($num_col)) -eq 0  && $(($num_col)) -lt 1000  ]]; then
    pk_flag="no"
    name_colum_array=()
    for ((i = 0; i < $num_col; i++)); do
      pk='null'
      sep=':'
      n_line="\n"
      read -r -p "Colums name : " colum_name
      dep="false"
     
      if [ ${#name_colum_array[@]} -gt 0 ]
        then
         
            for item in ${name_colum_array[@]} ; do 
                   if [ $colum_name = $item  ] 
                   then
                       dep="true"
                       echo -e "\033[31mdeplicate name colum enter anther name\033[m" 
                       break
                   fi
            done
            if [ $dep = "true" ]
            then
               dep="false"
               i=$((i - 1))
               continue
            fi

        fi
      #check_name
      if [[ ! $(check_name $colum_name) = 'true' ]]; then
         echo -e "\033[31mInvild Colum_name\033[m" 
        i=$((i - 1))
        continue
      fi
      select type in "int" "string"; do
        case $type in
        "int")
          colum_type="int"
          break
          ;;
        "string")
          colum_type="string"
          break
          ;;
        *)
          echo "Error"
          ;;
        esac
      done
      if [[ $pk == 'null' && $pk_flag == "no" ]]; then
        read -r -p "make primary key  yes or no  : " flag
        case $flag in
        "yes")
          pk="pk"
          pk_flag="yes"
          pk_meta="$colum_name:$colum_type:pk"
          name_colum_array+=($colum_name)
          

          continue
          ;;
        *)
          echo "Error " >> error.log
          ;;
        esac

      fi
      name_colum_array+=($colum_name)
      meta_data+="$colum_name:$colum_type:null$n_line"
     
    done
    if [[ ! -z $pk_meta ]]
    then 
    touch "$url/meta_data/$tb_name" 2>>error.log
    echo -e $pk_meta>>"$url/meta_data/$tb_name"
    echo -e ${colum_array[@]} >>"$url/meta_data/$tb_name"
    touch $url/data/$tb_name
    echo   -e "\033[36mtable created successfully\033[m"
    else
    pk_meta="id:int:pk"
    touch "$url/meta_data/$tb_name" 2>>error.log
    echo -e $pk_meta>>"$url/meta_data/$tb_name"
    echo -e $meta_data>>"$url/meta_data/$tb_name"
    touch $url/data/$tb_name
    echo   -e "\033[36madded default primary key\033[m"
    echo   -e "\033[36mtable created successfully\033[m"
    
    fi
  else
   
     echo -e "\033[31mInvild Input\033[m" 
  fi
else
   echo -e "\033[31mInvalid name of Table\033[m" 

fi
